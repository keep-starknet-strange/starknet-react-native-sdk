name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Yarn version
        run: corepack prepare yarn@3.6.1 --activate

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run type checking
        run: yarn typecheck

      - name: Run linting
        run: yarn lint

      - name: Run tests
        run: yarn test:coverage

      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Yarn version
        run: corepack prepare yarn@3.6.1 --activate

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build package
        run: yarn build

      - name: Verify package contents
        run: |
          npm pack --dry-run
          ls -la lib/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: lib/
          retention-days: 7

  validate-example:
    name: Validate Example App
    runs-on: ubuntu-latest
    needs: build
    if: false # Enable when example app is created
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Yarn version
        run: corepack prepare yarn@3.6.1 --activate

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build SDK
        run: yarn build

      - name: Test example app
        run: |
          cd example
          yarn install
          yarn typecheck
          yarn test || true # Allow failure for now

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Yarn version
        run: corepack prepare yarn@3.6.1 --activate

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run security audit
        run: yarn audit --recursive --environment production

      - name: Check for known vulnerabilities
        run: |
          npx audit-ci --config .auditrc.json || true 